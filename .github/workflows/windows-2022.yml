name: Free Windows RDP

on: workflow_dispatch

jobs:
  build:
    runs-on: windows-latest
    timeout-minutes: 360

    env:
      NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}

    steps:
    - name: Download Ngrok (v3 stable)
      run: |
        Invoke-WebRequest https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip -OutFile ngrok.zip
        Expand-Archive ngrok.zip -DestinationPath ngrok

    - name: Set Ngrok Auth Token
      run: |
        .\ngrok\ngrok.exe config add-authtoken $Env:NGROK_AUTH_TOKEN

    - name: Enable RDP + Firewall
      run: |
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"

    - name: Start Ngrok Tunnel (RDP)
      run: |
        Start-Process -FilePath .\ngrok\ngrok.exe -ArgumentList "tcp 3389" -NoNewWindow
        Start-Sleep -Seconds 10

    - name: Show RDP Info
      run: |
        $ngrokInfo = Invoke-RestMethod -Uri http://127.0.0.1:4040/api/tunnels
        $publicUrl = $ngrokInfo.tunnels[0].public_url
        $rdpHost = $publicUrl.Replace("tcp://", "")
        Write-Output "======================================="
        Write-Output "RDP is ready!"
        Write-Output "Connect using:"
        Write-Output "Host:Port -> $rdpHost"
        Write-Output "Username: administrator"
        Write-Output "Password: JohnTech1234"
        Write-Output "======================================="

    - name: Keep session alive
      run: |
        for ($i = 0; $i -lt 360; $i++) {
          Write-Host "‚è≥ RDP is active... Hour $i"
          Start-Sleep -Seconds 3600
        }
